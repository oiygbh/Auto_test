name: Apifox CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # 支持手动触发

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # 从仓库中检出代码

      - name: Set up Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # 设置Node.js环境

      - name: Install Apifox CLI
        run: npm install -g apifox-cli  # 安装 Apifox CLI

      - name: Running Test Scenario
        env:
          APIFOX_ACCESS_TOKEN: ${{ secrets.APIFOX_ACCESS_TOKEN }}
        run: apifox run --access-token $APIFOX_ACCESS_TOKEN -t 5070833 -e 24543324 -n 1 -r html,cli -b

      - name: Archive test results
        uses: actions/upload-artifact@v3
        with:
          name: apifox-test-report
          path: apifox-reports  # 假设报告生成在当前目录下

      - name: Send report link to Slack
        run: |
          curl -X POST -H "Content-type: application/json" --data '{
          "channel": "#监控报警测试群",
          "text": "Apifox 测试完成，查看报告：[下载报告](https://github.com/oiygbh/Auto_test/actions/runs/10832245695)",
          "OperationID": "unique_operation_id",  # 添加一个唯一操作标识符
          "IsGroup": true  # 指定这是发送到群组
          }' https://imtest.fc.plus/api/third/send_slack_robot


