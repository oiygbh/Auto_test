name: Apifox CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # 支持手动触发

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # 从仓库中检出代码

      - name: Set up Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # 设置Node.js环境

      - name: Install Apifox CLI
        run: npm install -g apifox-cli  # 安装 Apifox CLI

      - name: Running Test Scenario
        env:
          APIFOX_ACCESS_TOKEN: ${{ secrets.APIFOX_ACCESS_TOKEN }}  # 使用 GitHub Secret
        run: apifox run --access-token $APIFOX_ACCESS_TOKEN -t 5070833 -e 24543324 -n 1 -r html,cli  # 移除 -o 选项

      - name: Archive test results
        uses: actions/upload-artifact@v3
        with:
          name: apifox-test-report  # 存储生成的 HTML 报告为工件
          path: ./report.html  # 假设报告生成在当前目录下

      - name: Send report link to Slack
        run: |
          curl -X POST -H 'Content-type: application/json' --data \
          '{
            "channel": "#监控报警测试群",  # 指定目标频道
            "text": "Apifox 测试完成，查看报告：[GitHub Actions](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          }' \
          https://imtest.fc.plus/api/third/send_slack_robot  # 使用你的Slack机器人链接
